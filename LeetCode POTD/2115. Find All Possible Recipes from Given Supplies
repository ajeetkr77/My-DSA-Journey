*********************************    Brute Force Solution    ***********************
class Solution {
public:
   

    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {

        int n = recipes.size();
        int m = supplies.size();
        map<string, bool> mp;

        for(int i = 0; i < m; i++) mp[supplies[i]] = true;
        vector<bool> vis(n, false);

        int count = n;
        while(count--){
            bool isAny = false;
            for(int i = 0; i < n; i++){
                bool isCooked = true;
                if(!vis[i]){
                    for(auto &ingre : ingredients[i]){
                        if(!mp[ingre]) {
                            isCooked = false;
                            break;
                        }
                    }
                    if(isCooked == true){
                        vis[i] = true;
                        isAny = true;
                        mp[recipes[i]] = true;
                    }
                } 
            }
            if(!isAny) break;
        }
        

        vector<string> result;
        for(int i = 0; i < n; i++){
            if(vis[i]) result.push_back(recipes[i]);
        }
        return result;
    }
};

****************************************     Optimal Solution   ********************************************************
